{"version":3,"sources":["vendor/little-loader.js","state.tsx","player.tsx","header.tsx","index.tsx","app.tsx"],"names":["load","reducer","state","action","nextState","produce","draft","type","source","channel","undefined","minimized","videoHeight","height","Math","min","window","innerHeight","max","localStorage","setItem","JSON","stringify","saveToStorage","Context","React","displayName","Provider","_ref","_ref$initialState","initialState","children","value","i","getItem","parse","err","loadFromStorage","react","useAppState","loadTwitchEmbed","process","JEST_WORKER_ID","Promise","resolve","reject","Player","_React$useState","loading","_React$useState2","Object","slicedToArray","_React$useState2$","error","setState","done","d","objectSpread","then","style","color","toString","player_PlayerInner","PlayerInner","_React$useState3","_React$useState4","dragging","setDragging","_useAppState","_useAppState2","_useAppState2$","_useAppState2$$videoH","dispatch","_React$useState5","throttle","makeActionSetVideoHeight","setHeight","className","classnames","onMouseDown","e","target","classList","contains","onmousemove","onmouseup","y","pageY","document","addEventListener","evt","removeEventListener","player_TwitchPlayer","player_ControlBar","player_Chat","TwitchPlayer","TwitchPlayerRef","_useAppState3","_useAppState4$","_useAppState4$$videoH","el","getElementById","Error","player","current","Twitch","width","offsetWidth","destroy","frame","querySelector","listener","id","ControlBar","_useAppState5","onClick","Chat","_useAppState7","frameBorder","scrolling","src","concat","Header","header_ChannelSwitcher","ChannelSwitcher","setValue","_useDebouncedCallback","useDebouncedCallback","save","onChange","placeholder","autoComplete","autoCorrect","autoCapitalize","spellCheck","ReactDOM","render","state_Provider","header_Header","player_Player"],"mappings":"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","file":"static/js/main.c4367d03.chunk.js","sourcesContent":["import load from \"little-loader\";\n\nexport default load;\n","import * as React from \"react\";\nimport produce from \"immer\";\n\nexport interface State {\n  source: \"twitch\" | \"mixer\";\n  channel?: string;\n  minimized?: boolean;\n  videoHeight?: number;\n}\n\nexport const defaultState = (): State => ({\n  source: \"twitch\",\n  videoHeight: 300,\n  minimized: false,\n});\n\nexport type Action = ActionSetChannel | ActionToggleMinimized | ActionSetVideoHeight | ActionSetSource;\nexport type Dispatch = (action: Action) => void;\n\nexport interface ActionSetSource {\n  type: \"set-source\";\n  source: \"twitch\" | \"mixer\";\n}\n\nexport function makeActionSetSource(source: \"twitch\" | \"mixer\"): ActionSetSource {\n  return { type: \"set-source\", source };\n}\n\nexport interface ActionSetChannel {\n  type: \"set-channel\";\n  channel?: string;\n}\n\nexport function makeActionSetChannel(channel?: string): ActionSetChannel {\n  return { type: \"set-channel\", channel };\n}\n\nexport interface ActionToggleMinimized {\n  type: \"toggle-minimized\";\n}\n\nexport function makeActionToggleMinimized(): ActionToggleMinimized {\n  return { type: \"toggle-minimized\" };\n}\n\nexport interface ActionSetVideoHeight {\n  type: \"set-video-height\";\n  height?: number;\n}\n\nexport function makeActionSetVideoHeight(height?: number): ActionSetVideoHeight {\n  return { type: \"set-video-height\", height };\n}\n\nfunction reducer(state: State, action: Action) {\n  const nextState = produce(state, (draft) => {\n    switch (action.type) {\n      case \"set-source\":\n        draft.source = action.source;\n        break;\n      case \"set-channel\":\n        draft.channel = action.channel || undefined;\n        break;\n      case \"toggle-minimized\":\n        draft.minimized = !draft.minimized;\n        break;\n      case \"set-video-height\":\n        draft.videoHeight =\n          action.height != null ? Math.min(window.innerHeight - 300, Math.max(100, action.height)) : undefined;\n        break;\n    }\n  });\n\n  saveToStorage(nextState);\n  return nextState;\n}\n\nexport type Value = [State, Dispatch];\n\nexport const Context = React.createContext<Value>([defaultState(), () => {}]);\nContext.displayName = \"StateContext\";\n\nfunction loadFromStorage(initialState: State): State {\n  try {\n    const value = localStorage.getItem(\"twitchat.work_data\");\n    if (value == null) return initialState;\n    return JSON.parse(value);\n  } catch (err) {\n    return initialState;\n  }\n}\n\nfunction saveToStorage(state: State) {\n  localStorage.setItem(\"twitchat.work_data\", JSON.stringify(state));\n}\n\nexport const Provider: React.FC<{ initialState?: State }> = function({ initialState = defaultState(), children }) {\n  const value = React.useReducer(reducer, initialState, (i) => loadFromStorage(i || {}));\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n};\n\nexport function useAppState() {\n  return React.useContext(Context);\n}\n","import \"./twitch-embed\";\nimport * as React from \"react\";\nimport load from \"./vendor/little-loader\";\nimport classnames from \"classnames\";\nimport { useAppState, makeActionToggleMinimized, makeActionSetVideoHeight } from \"./state\";\nimport { throttle } from \"lodash\";\n\nconst loadTwitchEmbed =\n  process.env.JEST_WORKER_ID !== undefined\n    ? new Promise<void>(() => {})\n    : new Promise<void>((resolve, reject) => {\n        load(\"https://player.twitch.tv/js/embed/v1.js\", (err) => {\n          err ? reject(err) : resolve();\n        });\n      });\n\ninterface Load {\n  error?: any;\n  loading: boolean;\n}\n\nexport const Player: React.FC = function() {\n  const [{ error, loading }, setState] = React.useState<Load>({ loading: true });\n\n  React.useEffect(() => {\n    const done = (d?: Partial<Load>) => setState({ ...d, loading: false });\n    loadTwitchEmbed.then(() => done(), (error) => done({ error }));\n  }, []);\n\n  if (error) return <div style={{ color: \"red\" }}>{error.toString()}</div>;\n\n  if (loading) return <div>Loading</div>;\n\n  return <PlayerInner />;\n};\n\nexport const PlayerInner: React.FC = function() {\n  const [dragging, setDragging] = React.useState(false);\n  const [{ minimized, videoHeight = 300 }, dispatch] = useAppState();\n  const [setHeight] = React.useState(() =>\n    throttle((height?: number) => {\n      dispatch(makeActionSetVideoHeight(height));\n    }, 1000 / 30)\n  );\n\n  return (\n    <div\n      className={classnames(\"player\", { dragging, minimized })}\n      onMouseDown={(e) => {\n        const target = e.target as HTMLElement;\n        if (!target.classList.contains(\"control-bar\")) return;\n\n        let onmousemove: (ev: MouseEvent) => any;\n        let onmouseup: (ev: MouseEvent) => any;\n        let y = e.pageY;\n        let height = videoHeight;\n\n        document.addEventListener(\n          \"mousemove\",\n          (onmousemove = (evt) => {\n            setHeight(height + (evt.pageY - y));\n          })\n        );\n\n        document.addEventListener(\n          \"mouseup\",\n          (onmouseup = () => {\n            document.removeEventListener(\"mousemove\", onmousemove);\n            document.removeEventListener(\"mouseup\", onmouseup);\n            setDragging(false);\n          })\n        );\n\n        setDragging(true);\n      }}\n    >\n      <div className=\"click-absorber\" />\n      <TwitchPlayer />\n      <ControlBar />\n      <Chat />\n    </div>\n  );\n};\n\nexport const TwitchPlayer: React.FC = function() {\n  const TwitchPlayerRef = React.useRef<Twitch.Player>();\n  const [{ channel, minimized, videoHeight = 300 }] = useAppState();\n\n  React.useEffect(() => {\n    if (channel == null) return;\n\n    const el = document.getElementById(\"twitch-player\");\n    if (el == null) throw new Error(\"no element\");\n\n    const player = (TwitchPlayerRef.current = new Twitch.Player(\"twitch-player\", {\n      channel,\n      width: el.offsetWidth,\n      height: videoHeight,\n    }));\n\n    return () => {\n      player.destroy();\n      TwitchPlayerRef.current = undefined;\n    };\n  }, [\n    // only the channel, not the height because we only want to recreate the player object when the channel changes\n    channel,\n  ]);\n\n  React.useEffect(() => {\n    const frame: HTMLIFrameElement | null = document.querySelector(\"#twitch-player > iframe\");\n    if (frame) frame.height = videoHeight + \"px\";\n  }, [videoHeight]);\n\n  React.useEffect(() => {\n    let listener: () => any;\n    window.addEventListener(\n      \"resize\",\n      (listener = throttle(() => {\n        const el = document.getElementById(\"twitch-player\");\n        if (el == null) return;\n\n        const frame: HTMLIFrameElement | null = el.querySelector(\"iframe\");\n        if (frame) frame.width = el.offsetWidth + \"px\";\n      }, 250))\n    );\n\n    return () => {\n      window.removeEventListener(\"resize\", listener);\n    };\n  }, []);\n\n  return <div className=\"twitch-player\" id=\"twitch-player\" style={{ height: minimized ? 0 : videoHeight }} />;\n};\n\nexport const ControlBar: React.FC = function() {\n  const [, dispatch] = useAppState();\n\n  return (\n    <div className=\"control-bar\">\n      <button\n        className=\"minimize\"\n        onClick={() => {\n          dispatch(makeActionToggleMinimized());\n        }}\n      />\n    </div>\n  );\n};\n\nexport const Chat: React.FC = function() {\n  const [{ channel }] = useAppState();\n  return channel ? (\n    <iframe\n      className=\"twitch-chat\"\n      frameBorder=\"0\"\n      scrolling=\"no\"\n      src={`https://www.twitch.tv/embed/${channel}/chat`}\n    />\n  ) : null;\n};\n","import * as React from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { useAppState, makeActionSetChannel } from \"./state\";\n\nexport const Header: React.FC = function() {\n  return (\n    <header>\n      <ChannelSwitcher />\n    </header>\n  );\n};\n\nexport const ChannelSwitcher: React.FC = function() {\n  const [{ channel }, dispatch] = useAppState();\n  const [value, setValue] = React.useState(channel || \"\");\n  const [save] = useDebouncedCallback((value?: string) => dispatch(makeActionSetChannel(value)), 1000, []);\n\n  function onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setValue(e.target.value);\n    save(e.target.value);\n  }\n\n  return (\n    <input\n      type=\"text\"\n      className=\"channel-switcher\"\n      value={value}\n      onChange={onChange}\n      placeholder=\"Enter Channel Name...\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      autoCapitalize=\"off\"\n      spellCheck={false}\n    />\n  );\n};\n","import \"./index.css\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import * as React from \"react\";\nimport { Player } from \"./player\";\nimport { Provider } from \"./state\";\nimport { Header } from \"./header\";\n\nexport const App: React.FC = function() {\n  return (\n    <div className=\"app\">\n      <Provider>\n        <Header />\n        <Player />\n      </Provider>\n    </div>\n  );\n};\n"],"sourceRoot":""}