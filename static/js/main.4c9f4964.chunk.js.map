{"version":3,"sources":["vendor/little-loader.js","state.tsx","player.tsx","header.tsx","index.tsx"],"names":["load","defaultState","videoHeight","minimized","reducer","state","action","nextState","produce","draft","type","channel","undefined","height","Math","min","window","innerHeight","max","localStorage","setItem","JSON","stringify","saveToStorage","Context","React","displayName","Provider","_ref","_ref$initialState","initialState","children","value","i","getItem","parse","err","loadFromStorage","react","useAppState","loadTwitchEmbed","Promise","resolve","reject","useLoadTwitchEmbedJS","createUseResolver","_resolve","Object","asyncToGenerator","regenerator_default","a","mark","_callee","result","wrap","_context","prev","next","sent","abrupt","stop","apply","this","arguments","shouldUpdate","Player","_React$useState","_React$useState2","slicedToArray","dragging","setDragging","_useAppState","_useAppState2","_useAppState2$","_useAppState2$$videoH","dispatch","_React$useState3","throttle","makeActionSetVideoHeight","setHeight","className","classnames","onMouseDown","e","target","classList","contains","onmousemove","onmouseup","y","pageY","document","addEventListener","evt","removeEventListener","player_TwitchPlayer","player_ControlBar","player_Chat","TwitchPlayer","TwitchPlayerRef","_useAppState3","_useAppState4$","_useAppState4$$videoH","el","getElementById","Error","player","current","Twitch","width","offsetWidth","destroy","frame","querySelector","listener","id","style","ControlBar","_useAppState5","onClick","Chat","_useAppState7","frameBorder","scrolling","src","concat","Header","header_ChannelSwitcher","ChannelSwitcher","setValue","_useDebouncedCallback","useDebouncedCallback","save","onChange","placeholder","autoComplete","autoCorrect","autoCapitalize","spellCheck","__webpack_require__","d","__webpack_exports__","src_App","src_Body","App","state_Provider","header_Header","Body","_useLoadTwitchEmbedJS","error","loading","color","toString","player_Player","ReactDOM","render"],"mappings":"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","file":"static/js/main.4c9f4964.chunk.js","sourcesContent":["import load from \"little-loader\";\n\nexport default load;\n","import * as React from \"react\";\nimport produce from \"immer\";\n\nexport interface State {\n  channel?: string;\n  minimized?: boolean;\n  videoHeight?: number;\n}\n\nexport const defaultState: State = {\n  videoHeight: 300,\n  minimized: false,\n};\n\nexport type Action = ActionSetChannel | ActionToggleMinimized | ActionSetVideoHeight;\nexport type Dispatch = (action: Action) => void;\n\nexport interface ActionSetChannel {\n  type: \"set-channel\";\n  channel?: string;\n}\n\nexport function makeActionSetChannel(channel?: string): ActionSetChannel {\n  return { type: \"set-channel\", channel };\n}\n\nexport interface ActionToggleMinimized {\n  type: \"toggle-minimized\";\n}\n\nexport function makeActionToggleMinimized(): ActionToggleMinimized {\n  return { type: \"toggle-minimized\" };\n}\n\nexport interface ActionSetVideoHeight {\n  type: \"set-video-height\";\n  height?: number;\n}\n\nexport function makeActionSetVideoHeight(height?: number): ActionSetVideoHeight {\n  return { type: \"set-video-height\", height };\n}\n\nfunction reducer(state: State, action: Action) {\n  const nextState = produce(state, (draft) => {\n    switch (action.type) {\n      case \"set-channel\":\n        draft.channel = action.channel || undefined;\n        break;\n      case \"toggle-minimized\":\n        draft.minimized = !draft.minimized;\n        break;\n      case \"set-video-height\":\n        draft.videoHeight =\n          action.height != null ? Math.min(window.innerHeight - 300, Math.max(100, action.height)) : undefined;\n        break;\n    }\n  });\n\n  saveToStorage(nextState);\n  return nextState;\n}\n\nexport type Value = [State, Dispatch];\n\nexport const Context = React.createContext<Value>([{}, () => {}]);\nContext.displayName = \"StateContext\";\n\nfunction loadFromStorage(initialState: State): State {\n  try {\n    const value = localStorage.getItem(\"twitchat.work_data\");\n    if (value == null) return initialState;\n    return JSON.parse(value);\n  } catch (err) {\n    return initialState;\n  }\n}\n\nfunction saveToStorage(state: State) {\n  localStorage.setItem(\"twitchat.work_data\", JSON.stringify(state));\n}\n\nexport const Provider: React.FC<{ initialState?: State }> = function({ initialState = defaultState, children }) {\n  const value = React.useReducer(reducer, initialState, (i) => loadFromStorage(i || {}));\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n};\n\nexport function useAppState() {\n  return React.useContext(Context);\n}\n","import \"./twitch-embed\";\nimport * as React from \"react\";\nimport load from \"./vendor/little-loader\";\nimport { createUseResolver } from \"@pagedip/util-react-resolver\";\nimport classnames from \"classnames\";\n// import { closest } from \"@pagedip/util-closest\";\nimport { useAppState, makeActionToggleMinimized, makeActionSetVideoHeight } from \"./state\";\nimport { throttle } from \"lodash\";\n\nconst loadTwitchEmbed = new Promise<void>((resolve, reject) => {\n  load(\"https://player.twitch.tv/js/embed/v1.js\", (err) => {\n    err ? reject(err) : resolve();\n  });\n});\n\nexport const useLoadTwitchEmbedJS = createUseResolver<void, void>({\n  async resolve() {\n    const result = await loadTwitchEmbed;\n    return result;\n  },\n  shouldUpdate() {\n    return false;\n  },\n});\n\nexport const Player: React.FC = function() {\n  const [dragging, setDragging] = React.useState(false);\n  const [{ minimized, videoHeight = 300 }, dispatch] = useAppState();\n  const [setHeight] = React.useState(() =>\n    throttle((height?: number) => {\n      dispatch(makeActionSetVideoHeight(height));\n    }, 1000 / 30)\n  );\n\n  return (\n    <div\n      className={classnames(\"player\", { dragging, minimized })}\n      onMouseDown={(e) => {\n        const target = e.target as HTMLElement;\n        if (!target.classList.contains(\"control-bar\")) return;\n\n        let onmousemove: (ev: MouseEvent) => any;\n        let onmouseup: (ev: MouseEvent) => any;\n        let y = e.pageY;\n        let height = videoHeight;\n\n        document.addEventListener(\n          \"mousemove\",\n          (onmousemove = (evt) => {\n            setHeight(height + (evt.pageY - y));\n          })\n        );\n\n        document.addEventListener(\n          \"mouseup\",\n          (onmouseup = () => {\n            document.removeEventListener(\"mousemove\", onmousemove);\n            document.removeEventListener(\"mouseup\", onmouseup);\n            setDragging(false);\n          })\n        );\n\n        setDragging(true);\n      }}\n    >\n      <div className=\"click-absorber\" />\n      <TwitchPlayer />\n      <ControlBar />\n      <Chat />\n    </div>\n  );\n};\n\nexport const TwitchPlayer: React.FC = function() {\n  const TwitchPlayerRef = React.useRef<Twitch.Player>();\n  const [{ channel, minimized, videoHeight = 300 }] = useAppState();\n\n  React.useEffect(() => {\n    if (channel == null) return;\n\n    const el = document.getElementById(\"twitch-player\");\n    if (el == null) throw new Error(\"no element\");\n\n    const player = (TwitchPlayerRef.current = new Twitch.Player(\"twitch-player\", {\n      channel,\n      width: el.offsetWidth,\n      height: videoHeight,\n    }));\n\n    return () => {\n      player.destroy();\n      TwitchPlayerRef.current = undefined;\n    };\n  }, [\n    // only the channel, not the height because we only want to recreate the player object when the channel changes\n    channel,\n  ]);\n\n  React.useEffect(() => {\n    const frame: HTMLIFrameElement | null = document.querySelector(\"#twitch-player > iframe\");\n    if (frame) frame.height = videoHeight + \"px\";\n  }, [videoHeight]);\n\n  React.useEffect(() => {\n    let listener: () => any;\n    window.addEventListener(\n      \"resize\",\n      (listener = throttle(() => {\n        const el = document.getElementById(\"twitch-player\");\n        if (el == null) return;\n\n        const frame: HTMLIFrameElement | null = el.querySelector(\"iframe\");\n        if (frame) frame.width = el.offsetWidth + \"px\";\n      }, 250))\n    );\n\n    return () => {\n      window.removeEventListener(\"resize\", listener);\n    };\n  }, []);\n\n  return <div className=\"twitch-player\" id=\"twitch-player\" style={{ height: minimized ? 0 : videoHeight }} />;\n};\n\nexport const ControlBar: React.FC = function() {\n  const [, dispatch] = useAppState();\n\n  return (\n    <div className=\"control-bar\">\n      <button\n        className=\"minimize\"\n        onClick={() => {\n          dispatch(makeActionToggleMinimized());\n        }}\n      />\n    </div>\n  );\n};\n\nexport const Chat: React.FC = function() {\n  const [{ channel }] = useAppState();\n  return channel ? (\n    <iframe\n      className=\"twitch-chat\"\n      frameBorder=\"0\"\n      scrolling=\"no\"\n      src={`https://www.twitch.tv/embed/${channel}/chat`}\n    />\n  ) : null;\n};\n","import * as React from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { useAppState, makeActionSetChannel } from \"./state\";\n\nexport const Header: React.FC = function() {\n  return (\n    <header>\n      <ChannelSwitcher />\n    </header>\n  );\n};\n\nexport const ChannelSwitcher: React.FC = function() {\n  const [{ channel }, dispatch] = useAppState();\n  const [value, setValue] = React.useState(channel || \"\");\n  const [save] = useDebouncedCallback((value?: string) => dispatch(makeActionSetChannel(value)), 1000, []);\n\n  function onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setValue(e.target.value);\n    save(e.target.value);\n  }\n\n  return (\n    <input\n      type=\"text\"\n      className=\"channel-switcher\"\n      value={value}\n      onChange={onChange}\n      placeholder=\"Enter Channel Name...\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      autoCapitalize=\"off\"\n      spellCheck={false}\n    />\n  );\n};\n","import \"./index.css\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Player, useLoadTwitchEmbedJS } from \"./player\";\nimport { Provider } from \"./state\";\nimport { Header } from \"./header\";\n\nexport const App: React.FC = function() {\n  return (\n    <div className=\"app\">\n      <Provider>\n        <Header />\n        <Body />\n      </Provider>\n    </div>\n  );\n};\n\nexport const Body: React.FC = function() {\n  const { error, loading } = useLoadTwitchEmbedJS();\n\n  if (error) return <div style={{ color: \"red\" }}>{error.toString()}</div>;\n\n  if (loading) return <div>Loading</div>;\n\n  return <Player />;\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}